{"version":3,"file":"storefront-api-client.js","sources":["../../../graphql-client/dist/graphql-client/constants.mjs","../../../graphql-client/dist/graphql-client/utilities.mjs","../../../graphql-client/dist/graphql-client/http-fetch.mjs","../../../graphql-client/dist/graphql-client/graphql-client.mjs","../../../graphql-client/dist/api-client-utilities/validations.mjs","../../../graphql-client/dist/api-client-utilities/api-versions.mjs","../../../graphql-client/dist/api-client-utilities/utilities.mjs","../../../src/constants.ts","../../../src/validations.ts","../../../src/storefront-api-client.ts"],"sourcesContent":["const CLIENT = \"GraphQL Client\";\nconst MIN_RETRIES = 0;\nconst MAX_RETRIES = 3;\nconst GQL_API_ERROR = \"An error occurred while fetching from the API. Review 'graphQLErrors' for details.\";\nconst UNEXPECTED_CONTENT_TYPE_ERROR = \"Response returned unexpected Content-Type:\";\nconst NO_DATA_OR_ERRORS_ERROR = \"An unknown error has occurred. The API did not return a data object or any errors in its response.\";\nconst CONTENT_TYPES = {\n    json: \"application/json\",\n    multipart: \"multipart/mixed\",\n};\nconst RETRY_WAIT_TIME = 1000;\nconst RETRIABLE_STATUS_CODES = [429, 503];\n\nexport { CLIENT, CONTENT_TYPES, GQL_API_ERROR, MAX_RETRIES, MIN_RETRIES, NO_DATA_OR_ERRORS_ERROR, RETRIABLE_STATUS_CODES, RETRY_WAIT_TIME, UNEXPECTED_CONTENT_TYPE_ERROR };\n//# sourceMappingURL=constants.mjs.map\n","import { MIN_RETRIES, MAX_RETRIES, CLIENT } from './constants.mjs';\n\nfunction formatErrorMessage(message, client = CLIENT) {\n    return message.startsWith(`${client}`) ? message : `${client}: ${message}`;\n}\nfunction getErrorMessage(error) {\n    return error instanceof Error ? error.message : JSON.stringify(error);\n}\nfunction validateRetries({ client, retries, }) {\n    if (retries !== undefined &&\n        (typeof retries !== \"number\" ||\n            retries < MIN_RETRIES ||\n            retries > MAX_RETRIES)) {\n        throw new Error(`${client}: The provided \"retries\" value (${retries}) is invalid - it cannot be less than ${MIN_RETRIES} or greater than ${MAX_RETRIES}`);\n    }\n}\nfunction getKeyValueIfValid(key, value) {\n    return value &&\n        (typeof value !== \"object\" ||\n            Array.isArray(value) ||\n            (typeof value === \"object\" && Object.keys(value).length > 0))\n        ? { [key]: value }\n        : {};\n}\n\nexport { formatErrorMessage, getErrorMessage, getKeyValueIfValid, validateRetries };\n//# sourceMappingURL=utilities.mjs.map\n","import { CLIENT, RETRY_WAIT_TIME, RETRIABLE_STATUS_CODES } from './constants.mjs';\nimport { formatErrorMessage, getErrorMessage } from './utilities.mjs';\n\nfunction generateHttpFetch({ clientLogger, customFetchApi = fetch, client = CLIENT, defaultRetryWaitTime = RETRY_WAIT_TIME, retriableCodes = RETRIABLE_STATUS_CODES, }) {\n    const httpFetch = async (requestParams, count, maxRetries) => {\n        const nextCount = count + 1;\n        const maxTries = maxRetries + 1;\n        let response;\n        try {\n            response = await customFetchApi(...requestParams);\n            clientLogger({\n                type: \"HTTP-Response\",\n                content: {\n                    requestParams,\n                    response,\n                },\n            });\n            if (!response.ok &&\n                retriableCodes.includes(response.status) &&\n                nextCount <= maxTries) {\n                throw new Error();\n            }\n            return response;\n        }\n        catch (error) {\n            if (nextCount <= maxTries) {\n                const retryAfter = response?.headers.get(\"Retry-After\");\n                await sleep(retryAfter ? parseInt(retryAfter, 10) : defaultRetryWaitTime);\n                clientLogger({\n                    type: \"HTTP-Retry\",\n                    content: {\n                        requestParams,\n                        lastResponse: response,\n                        retryAttempt: count,\n                        maxRetries,\n                    },\n                });\n                return httpFetch(requestParams, nextCount, maxRetries);\n            }\n            throw new Error(formatErrorMessage(`${maxRetries > 0\n                ? `Attempted maximum number of ${maxRetries} network retries. Last message - `\n                : \"\"}${getErrorMessage(error)}`, client));\n        }\n    };\n    return httpFetch;\n}\nasync function sleep(waitTime) {\n    return new Promise((resolve) => setTimeout(resolve, waitTime));\n}\n\nexport { generateHttpFetch };\n//# sourceMappingURL=http-fetch.mjs.map\n","import { generateHttpFetch } from './http-fetch.mjs';\nimport { CLIENT, CONTENT_TYPES, UNEXPECTED_CONTENT_TYPE_ERROR, GQL_API_ERROR, NO_DATA_OR_ERRORS_ERROR, RETRY_WAIT_TIME } from './constants.mjs';\nimport { validateRetries, formatErrorMessage, getErrorMessage, getKeyValueIfValid } from './utilities.mjs';\n\nfunction createGraphQLClient({ headers, url, customFetchApi = fetch, retries = 0, logger, }) {\n    validateRetries({ client: CLIENT, retries });\n    const config = {\n        headers,\n        url,\n        retries,\n    };\n    const clientLogger = generateClientLogger(logger);\n    const httpFetch = generateHttpFetch({\n        customFetchApi,\n        clientLogger,\n        defaultRetryWaitTime: RETRY_WAIT_TIME,\n    });\n    const fetch = generateFetch(httpFetch, config);\n    const request = generateRequest(fetch);\n    return {\n        config,\n        fetch,\n        request,\n    };\n}\nfunction generateClientLogger(logger) {\n    return (logContent) => {\n        if (logger) {\n            logger(logContent);\n        }\n    };\n}\nasync function processJSONResponse(response) {\n    const { errors, data, extensions } = await response.json();\n    return {\n        ...getKeyValueIfValid(\"data\", data),\n        ...getKeyValueIfValid(\"extensions\", extensions),\n        ...(errors || !data\n            ? {\n                errors: {\n                    networkStatusCode: response.status,\n                    message: formatErrorMessage(errors ? GQL_API_ERROR : NO_DATA_OR_ERRORS_ERROR),\n                    ...getKeyValueIfValid(\"graphQLErrors\", errors),\n                    response,\n                },\n            }\n            : {}),\n    };\n}\nfunction generateFetch(httpFetch, { url, headers, retries }) {\n    return async (operation, options = {}) => {\n        const { variables, headers: overrideHeaders, url: overrideUrl, retries: overrideRetries, } = options;\n        const body = JSON.stringify({\n            query: operation,\n            variables,\n        });\n        validateRetries({ client: CLIENT, retries: overrideRetries });\n        const flatHeaders = Object.fromEntries(Object.entries({ ...headers, ...overrideHeaders }).map(([key, value]) => [\n            key,\n            Array.isArray(value) ? value.join(\", \") : value.toString(),\n        ]));\n        const fetchParams = [\n            overrideUrl ?? url,\n            {\n                method: \"POST\",\n                headers: flatHeaders,\n                body,\n            },\n        ];\n        return httpFetch(fetchParams, 1, overrideRetries ?? retries);\n    };\n}\nfunction generateRequest(fetch) {\n    return async (...props) => {\n        try {\n            const response = await fetch(...props);\n            const { status, statusText } = response;\n            const contentType = response.headers.get(\"content-type\") || \"\";\n            if (!response.ok) {\n                return {\n                    errors: {\n                        networkStatusCode: status,\n                        message: formatErrorMessage(statusText),\n                        response,\n                    },\n                };\n            }\n            if (!contentType.includes(CONTENT_TYPES.json)) {\n                return {\n                    errors: {\n                        networkStatusCode: status,\n                        message: formatErrorMessage(`${UNEXPECTED_CONTENT_TYPE_ERROR} ${contentType}`),\n                        response,\n                    },\n                };\n            }\n            return processJSONResponse(response);\n        }\n        catch (error) {\n            return {\n                errors: {\n                    message: getErrorMessage(error),\n                },\n            };\n        }\n    };\n}\n\nexport { createGraphQLClient, generateClientLogger };\n//# sourceMappingURL=graphql-client.mjs.map\n","function validateDomainAndGetStoreUrl({ client, storeDomain, }) {\n    try {\n        if (!storeDomain || typeof storeDomain !== \"string\") {\n            throw new Error();\n        }\n        const trimmedDomain = storeDomain.trim();\n        const protocolUrl = trimmedDomain.startsWith(\"http:\") || trimmedDomain.startsWith(\"https:\")\n            ? trimmedDomain\n            : `https://${trimmedDomain}`;\n        const url = new URL(protocolUrl);\n        url.protocol = \"https\";\n        return url.origin;\n    }\n    catch (_error) {\n        throw new Error(`${client}: a valid store domain (\"${storeDomain}\") must be provided`);\n    }\n}\nfunction validateApiVersion({ client, currentSupportedApiVersions, apiVersion, logger, }) {\n    const versionError = `${client}: the provided apiVersion (\"${apiVersion}\")`;\n    const supportedVersion = `Currently supported API versions: ${currentSupportedApiVersions.join(\", \")}`;\n    if (!apiVersion || typeof apiVersion !== \"string\") {\n        throw new Error(`${versionError} is invalid. ${supportedVersion}`);\n    }\n    const trimmedApiVersion = apiVersion.trim();\n    if (!currentSupportedApiVersions.includes(trimmedApiVersion)) {\n        if (logger) {\n            logger({\n                type: \"Unsupported_Api_Version\",\n                content: {\n                    apiVersion,\n                    supportedApiVersions: currentSupportedApiVersions,\n                },\n            });\n        }\n        else {\n            console.warn(`${versionError} is likely deprecated or not supported. ${supportedVersion}`);\n        }\n    }\n}\n\nexport { validateApiVersion, validateDomainAndGetStoreUrl };\n//# sourceMappingURL=validations.mjs.map\n","function getQuarterMonth(quarter) {\n    const month = quarter * 3 - 2;\n    return month === 10 ? month : `0${month}`;\n}\nfunction getPrevousVersion(year, quarter, nQuarter) {\n    const versionQuarter = quarter - nQuarter;\n    if (versionQuarter <= 0) {\n        return `${year - 1}-${getQuarterMonth(versionQuarter + 4)}`;\n    }\n    return `${year}-${getQuarterMonth(versionQuarter)}`;\n}\nfunction getCurrentApiVersion() {\n    const date = new Date();\n    const month = date.getUTCMonth();\n    const year = date.getUTCFullYear();\n    const quarter = Math.floor(month / 3 + 1);\n    return {\n        year,\n        quarter,\n        version: `${year}-${getQuarterMonth(quarter)}`,\n    };\n}\nfunction getCurrentSupportedApiVersions() {\n    const { year, quarter, version: currentVersion } = getCurrentApiVersion();\n    const nextVersion = quarter === 4\n        ? `${year + 1}-01`\n        : `${year}-${getQuarterMonth(quarter + 1)}`;\n    return [\n        getPrevousVersion(year, quarter, 3),\n        getPrevousVersion(year, quarter, 2),\n        getPrevousVersion(year, quarter, 1),\n        currentVersion,\n        nextVersion,\n        \"unstable\",\n    ];\n}\n\nexport { getCurrentApiVersion, getCurrentSupportedApiVersions };\n//# sourceMappingURL=api-versions.mjs.map\n","function generateGetHeaders(config) {\n    return (customHeaders) => {\n        return { ...(customHeaders ?? {}), ...config.headers };\n    };\n}\nfunction generateGetGQLClientParams({ getHeaders, getApiUrl }) {\n    return (operation, options) => {\n        const props = [operation];\n        if (options && Object.keys(options).length > 0) {\n            const { variables, apiVersion: propApiVersion, headers, retries, } = options;\n            props.push({\n                ...(variables ? { variables } : {}),\n                ...(headers ? { headers: getHeaders(headers) } : {}),\n                ...(propApiVersion ? { url: getApiUrl(propApiVersion) } : {}),\n                ...(retries ? { retries } : {}),\n            });\n        }\n        return props;\n    };\n}\n\nexport { generateGetGQLClientParams, generateGetHeaders };\n//# sourceMappingURL=utilities.mjs.map\n",null,null,null],"names":["CLIENT"],"mappings":";;;;;;;IAAA,MAAMA,QAAM,GAAG,gBAAgB,CAAC;IAChC,MAAM,WAAW,GAAG,CAAC,CAAC;IACtB,MAAM,WAAW,GAAG,CAAC,CAAC;IACtB,MAAM,aAAa,GAAG,oFAAoF,CAAC;IAC3G,MAAM,6BAA6B,GAAG,4CAA4C,CAAC;IACnF,MAAM,uBAAuB,GAAG,oGAAoG,CAAC;IACrI,MAAM,aAAa,GAAG;IACtB,IAAI,IAAI,EAAE,kBAAkB;IAC5B,IAAI,SAAS,EAAE,iBAAiB;IAChC,CAAC,CAAC;IACF,MAAM,eAAe,GAAG,IAAI,CAAC;IAC7B,MAAM,sBAAsB,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;;ICTzC,SAAS,kBAAkB,CAAC,OAAO,EAAE,MAAM,GAAGA,QAAM,EAAE;IACtD,IAAI,OAAO,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC;IAC/E,CAAC;IACD,SAAS,eAAe,CAAC,KAAK,EAAE;IAChC,IAAI,OAAO,KAAK,YAAY,KAAK,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC1E,CAAC;IACD,SAAS,eAAe,CAAC,EAAE,MAAM,EAAE,OAAO,GAAG,EAAE;IAC/C,IAAI,IAAI,OAAO,KAAK,SAAS;IAC7B,SAAS,OAAO,OAAO,KAAK,QAAQ;IACpC,YAAY,OAAO,GAAG,WAAW;IACjC,YAAY,OAAO,GAAG,WAAW,CAAC,EAAE;IACpC,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,gCAAgC,EAAE,OAAO,CAAC,sCAAsC,EAAE,WAAW,CAAC,iBAAiB,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;IAClK,KAAK;IACL,CAAC;IACD,SAAS,kBAAkB,CAAC,GAAG,EAAE,KAAK,EAAE;IACxC,IAAI,OAAO,KAAK;IAChB,SAAS,OAAO,KAAK,KAAK,QAAQ;IAClC,YAAY,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;IAChC,aAAa,OAAO,KAAK,KAAK,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACzE,UAAU,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE;IAC1B,UAAU,EAAE,CAAC;IACb;;ICpBA,SAAS,iBAAiB,CAAC,EAAE,YAAY,EAAE,cAAc,GAAG,KAAK,EAAE,MAAM,GAAGA,QAAM,EAAE,oBAAoB,GAAG,eAAe,EAAE,cAAc,GAAG,sBAAsB,GAAG,EAAE;IACxK,IAAI,MAAM,SAAS,GAAG,OAAO,aAAa,EAAE,KAAK,EAAE,UAAU,KAAK;IAClE,QAAQ,MAAM,SAAS,GAAG,KAAK,GAAG,CAAC,CAAC;IACpC,QAAQ,MAAM,QAAQ,GAAG,UAAU,GAAG,CAAC,CAAC;IACxC,QAAQ,IAAI,QAAQ,CAAC;IACrB,QAAQ,IAAI;IACZ,YAAY,QAAQ,GAAG,MAAM,cAAc,CAAC,GAAG,aAAa,CAAC,CAAC;IAC9D,YAAY,YAAY,CAAC;IACzB,gBAAgB,IAAI,EAAE,eAAe;IACrC,gBAAgB,OAAO,EAAE;IACzB,oBAAoB,aAAa;IACjC,oBAAoB,QAAQ;IAC5B,iBAAiB;IACjB,aAAa,CAAC,CAAC;IACf,YAAY,IAAI,CAAC,QAAQ,CAAC,EAAE;IAC5B,gBAAgB,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC;IACxD,gBAAgB,SAAS,IAAI,QAAQ,EAAE;IACvC,gBAAgB,MAAM,IAAI,KAAK,EAAE,CAAC;IAClC,aAAa;IACb,YAAY,OAAO,QAAQ,CAAC;IAC5B,SAAS;IACT,QAAQ,OAAO,KAAK,EAAE;IACtB,YAAY,IAAI,SAAS,IAAI,QAAQ,EAAE;IACvC,gBAAgB,MAAM,UAAU,GAAG,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IACxE,gBAAgB,MAAM,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,EAAE,EAAE,CAAC,GAAG,oBAAoB,CAAC,CAAC;IAC1F,gBAAgB,YAAY,CAAC;IAC7B,oBAAoB,IAAI,EAAE,YAAY;IACtC,oBAAoB,OAAO,EAAE;IAC7B,wBAAwB,aAAa;IACrC,wBAAwB,YAAY,EAAE,QAAQ;IAC9C,wBAAwB,YAAY,EAAE,KAAK;IAC3C,wBAAwB,UAAU;IAClC,qBAAqB;IACrB,iBAAiB,CAAC,CAAC;IACnB,gBAAgB,OAAO,SAAS,CAAC,aAAa,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;IACvE,aAAa;IACb,YAAY,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC,EAAE,UAAU,GAAG,CAAC;AAChE,kBAAkB,CAAC,4BAA4B,EAAE,UAAU,CAAC,iCAAiC,CAAC;AAC9F,kBAAkB,EAAE,CAAC,EAAE,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;IAC1D,SAAS;IACT,KAAK,CAAC;IACN,IAAI,OAAO,SAAS,CAAC;IACrB,CAAC;IACD,eAAe,KAAK,CAAC,QAAQ,EAAE;IAC/B,IAAI,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,KAAK,UAAU,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;IACnE;;IC5CA,SAAS,mBAAmB,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,cAAc,GAAG,KAAK,EAAE,OAAO,GAAG,CAAC,EAAE,MAAM,GAAG,EAAE;IAC7F,IAAI,eAAe,CAAC,EAAE,MAAM,EAAEA,QAAM,EAAE,OAAO,EAAE,CAAC,CAAC;IACjD,IAAI,MAAM,MAAM,GAAG;IACnB,QAAQ,OAAO;IACf,QAAQ,GAAG;IACX,QAAQ,OAAO;IACf,KAAK,CAAC;IACN,IAAI,MAAM,YAAY,GAAG,oBAAoB,CAAC,MAAM,CAAC,CAAC;IACtD,IAAI,MAAM,SAAS,GAAG,iBAAiB,CAAC;IACxC,QAAQ,cAAc;IACtB,QAAQ,YAAY;IACpB,QAAQ,oBAAoB,EAAE,eAAe;IAC7C,KAAK,CAAC,CAAC;IACP,IAAI,MAAM,KAAK,GAAG,aAAa,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;IACnD,IAAI,MAAM,OAAO,GAAG,eAAe,CAAC,KAAK,CAAC,CAAC;IAC3C,IAAI,OAAO;IACX,QAAQ,MAAM;IACd,QAAQ,KAAK;IACb,QAAQ,OAAO;IACf,KAAK,CAAC;IACN,CAAC;IACD,SAAS,oBAAoB,CAAC,MAAM,EAAE;IACtC,IAAI,OAAO,CAAC,UAAU,KAAK;IAC3B,QAAQ,IAAI,MAAM,EAAE;IACpB,YAAY,MAAM,CAAC,UAAU,CAAC,CAAC;IAC/B,SAAS;IACT,KAAK,CAAC;IACN,CAAC;IACD,eAAe,mBAAmB,CAAC,QAAQ,EAAE;IAC7C,IAAI,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;IAC/D,IAAI,OAAO;IACX,QAAQ,GAAG,kBAAkB,CAAC,MAAM,EAAE,IAAI,CAAC;IAC3C,QAAQ,GAAG,kBAAkB,CAAC,YAAY,EAAE,UAAU,CAAC;IACvD,QAAQ,IAAI,MAAM,IAAI,CAAC,IAAI;IAC3B,cAAc;IACd,gBAAgB,MAAM,EAAE;IACxB,oBAAoB,iBAAiB,EAAE,QAAQ,CAAC,MAAM;IACtD,oBAAoB,OAAO,EAAE,kBAAkB,CAAC,MAAM,GAAG,aAAa,GAAG,uBAAuB,CAAC;IACjG,oBAAoB,GAAG,kBAAkB,CAAC,eAAe,EAAE,MAAM,CAAC;IAClE,oBAAoB,QAAQ;IAC5B,iBAAiB;IACjB,aAAa;IACb,cAAc,EAAE,CAAC;IACjB,KAAK,CAAC;IACN,CAAC;IACD,SAAS,aAAa,CAAC,SAAS,EAAE,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE;IAC7D,IAAI,OAAO,OAAO,SAAS,EAAE,OAAO,GAAG,EAAE,KAAK;IAC9C,QAAQ,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,eAAe,EAAE,GAAG,EAAE,WAAW,EAAE,OAAO,EAAE,eAAe,GAAG,GAAG,OAAO,CAAC;IAC7G,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;IACpC,YAAY,KAAK,EAAE,SAAS;IAC5B,YAAY,SAAS;IACrB,SAAS,CAAC,CAAC;IACX,QAAQ,eAAe,CAAC,EAAE,MAAM,EAAEA,QAAM,EAAE,OAAO,EAAE,eAAe,EAAE,CAAC,CAAC;IACtE,QAAQ,MAAM,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,GAAG,OAAO,EAAE,GAAG,eAAe,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,KAAK;IACxH,YAAY,GAAG;IACf,YAAY,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,QAAQ,EAAE;IACtE,SAAS,CAAC,CAAC,CAAC;IACZ,QAAQ,MAAM,WAAW,GAAG;IAC5B,YAAY,WAAW,IAAI,GAAG;IAC9B,YAAY;IACZ,gBAAgB,MAAM,EAAE,MAAM;IAC9B,gBAAgB,OAAO,EAAE,WAAW;IACpC,gBAAgB,IAAI;IACpB,aAAa;IACb,SAAS,CAAC;IACV,QAAQ,OAAO,SAAS,CAAC,WAAW,EAAE,CAAC,EAAE,eAAe,IAAI,OAAO,CAAC,CAAC;IACrE,KAAK,CAAC;IACN,CAAC;IACD,SAAS,eAAe,CAAC,KAAK,EAAE;IAChC,IAAI,OAAO,OAAO,GAAG,KAAK,KAAK;IAC/B,QAAQ,IAAI;IACZ,YAAY,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;IACnD,YAAY,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,QAAQ,CAAC;IACpD,YAAY,MAAM,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;IAC3E,YAAY,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE;IAC9B,gBAAgB,OAAO;IACvB,oBAAoB,MAAM,EAAE;IAC5B,wBAAwB,iBAAiB,EAAE,MAAM;IACjD,wBAAwB,OAAO,EAAE,kBAAkB,CAAC,UAAU,CAAC;IAC/D,wBAAwB,QAAQ;IAChC,qBAAqB;IACrB,iBAAiB,CAAC;IAClB,aAAa;IACb,YAAY,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;IAC3D,gBAAgB,OAAO;IACvB,oBAAoB,MAAM,EAAE;IAC5B,wBAAwB,iBAAiB,EAAE,MAAM;IACjD,wBAAwB,OAAO,EAAE,kBAAkB,CAAC,CAAC,EAAE,6BAA6B,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC;IACtG,wBAAwB,QAAQ;IAChC,qBAAqB;IACrB,iBAAiB,CAAC;IAClB,aAAa;IACb,YAAY,OAAO,mBAAmB,CAAC,QAAQ,CAAC,CAAC;IACjD,SAAS;IACT,QAAQ,OAAO,KAAK,EAAE;IACtB,YAAY,OAAO;IACnB,gBAAgB,MAAM,EAAE;IACxB,oBAAoB,OAAO,EAAE,eAAe,CAAC,KAAK,CAAC;IACnD,iBAAiB;IACjB,aAAa,CAAC;IACd,SAAS;IACT,KAAK,CAAC;IACN;;IC1GA,SAAS,4BAA4B,CAAC,EAAE,MAAM,EAAE,WAAW,GAAG,EAAE;IAChE,IAAI,IAAI;IACR,QAAQ,IAAI,CAAC,WAAW,IAAI,OAAO,WAAW,KAAK,QAAQ,EAAE;IAC7D,YAAY,MAAM,IAAI,KAAK,EAAE,CAAC;IAC9B,SAAS;IACT,QAAQ,MAAM,aAAa,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC;IACjD,QAAQ,MAAM,WAAW,GAAG,aAAa,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,aAAa,CAAC,UAAU,CAAC,QAAQ,CAAC;IACnG,cAAc,aAAa;IAC3B,cAAc,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC,CAAC;IACzC,QAAQ,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,WAAW,CAAC,CAAC;IACzC,QAAQ,GAAG,CAAC,QAAQ,GAAG,OAAO,CAAC;IAC/B,QAAQ,OAAO,GAAG,CAAC,MAAM,CAAC;IAC1B,KAAK;IACL,IAAI,OAAO,MAAM,EAAE;IACnB,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,yBAAyB,EAAE,WAAW,CAAC,mBAAmB,CAAC,CAAC,CAAC;IAC/F,KAAK;IACL,CAAC;IACD,SAAS,kBAAkB,CAAC,EAAE,MAAM,EAAE,2BAA2B,EAAE,UAAU,EAAE,MAAM,GAAG,EAAE;IAC1F,IAAI,MAAM,YAAY,GAAG,CAAC,EAAE,MAAM,CAAC,4BAA4B,EAAE,UAAU,CAAC,EAAE,CAAC,CAAC;IAChF,IAAI,MAAM,gBAAgB,GAAG,CAAC,kCAAkC,EAAE,2BAA2B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3G,IAAI,IAAI,CAAC,UAAU,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;IACvD,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,EAAE,YAAY,CAAC,aAAa,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC;IAC3E,KAAK;IACL,IAAI,MAAM,iBAAiB,GAAG,UAAU,CAAC,IAAI,EAAE,CAAC;IAChD,IAAI,IAAI,CAAC,2BAA2B,CAAC,QAAQ,CAAC,iBAAiB,CAAC,EAAE;IAClE,QAAQ,IAAI,MAAM,EAAE;IACpB,YAAY,MAAM,CAAC;IACnB,gBAAgB,IAAI,EAAE,yBAAyB;IAC/C,gBAAgB,OAAO,EAAE;IACzB,oBAAoB,UAAU;IAC9B,oBAAoB,oBAAoB,EAAE,2BAA2B;IACrE,iBAAiB;IACjB,aAAa,CAAC,CAAC;IACf,SAAS;IACT,aAAa;IACb,YAAY,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,YAAY,CAAC,wCAAwC,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC;IACvG,SAAS;IACT,KAAK;IACL;;ICtCA,SAAS,eAAe,CAAC,OAAO,EAAE;IAClC,IAAI,MAAM,KAAK,GAAG,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;IAClC,IAAI,OAAO,KAAK,KAAK,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;IAC9C,CAAC;IACD,SAAS,iBAAiB,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE;IACpD,IAAI,MAAM,cAAc,GAAG,OAAO,GAAG,QAAQ,CAAC;IAC9C,IAAI,IAAI,cAAc,IAAI,CAAC,EAAE;IAC7B,QAAQ,OAAO,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACpE,KAAK;IACL,IAAI,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,eAAe,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IACD,SAAS,oBAAoB,GAAG;IAChC,IAAI,MAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;IAC5B,IAAI,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IACrC,IAAI,MAAM,IAAI,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;IACvC,IAAI,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9C,IAAI,OAAO;IACX,QAAQ,IAAI;IACZ,QAAQ,OAAO;IACf,QAAQ,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC;IACtD,KAAK,CAAC;IACN,CAAC;IACD,SAAS,8BAA8B,GAAG;IAC1C,IAAI,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,cAAc,EAAE,GAAG,oBAAoB,EAAE,CAAC;IAC9E,IAAI,MAAM,WAAW,GAAG,OAAO,KAAK,CAAC;IACrC,UAAU,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC;IAC1B,UAAU,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,eAAe,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACpD,IAAI,OAAO;IACX,QAAQ,iBAAiB,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;IAC3C,QAAQ,iBAAiB,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;IAC3C,QAAQ,iBAAiB,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;IAC3C,QAAQ,cAAc;IACtB,QAAQ,WAAW;IACnB,QAAQ,UAAU;IAClB,KAAK,CAAC;IACN;;ICnCA,SAAS,kBAAkB,CAAC,MAAM,EAAE;IACpC,IAAI,OAAO,CAAC,aAAa,KAAK;IAC9B,QAAQ,OAAO,EAAE,IAAI,aAAa,IAAI,EAAE,CAAC,EAAE,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;IAC/D,KAAK,CAAC;IACN,CAAC;IACD,SAAS,0BAA0B,CAAC,EAAE,UAAU,EAAE,SAAS,EAAE,EAAE;IAC/D,IAAI,OAAO,CAAC,SAAS,EAAE,OAAO,KAAK;IACnC,QAAQ,MAAM,KAAK,GAAG,CAAC,SAAS,CAAC,CAAC;IAClC,QAAQ,IAAI,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;IACxD,YAAY,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,cAAc,EAAE,OAAO,EAAE,OAAO,GAAG,GAAG,OAAO,CAAC;IACzF,YAAY,KAAK,CAAC,IAAI,CAAC;IACvB,gBAAgB,IAAI,SAAS,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC;IACnD,gBAAgB,IAAI,OAAO,GAAG,EAAE,OAAO,EAAE,UAAU,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC;IACpE,gBAAgB,IAAI,cAAc,GAAG,EAAE,GAAG,EAAE,SAAS,CAAC,cAAc,CAAC,EAAE,GAAG,EAAE,CAAC;IAC7E,gBAAgB,IAAI,OAAO,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC;IAC/C,aAAa,CAAC,CAAC;IACf,SAAS;IACT,QAAQ,OAAO,KAAK,CAAC;IACrB,KAAK,CAAC;IACN;;ICnBO,MAAM,oBAAoB,GAAG,kBAAkB,CAAC;IAChD,MAAM,mBAAmB,GAAG,uBAAuB,CAAC;IAC3D;IACO,MAAM,sBAAsB,GAAG,OAA+B,CAAC;IAE/D,MAAM,0BAA0B,GAAG,mCAAmC,CAAC;IACvE,MAAM,2BAA2B,GAAG,kCAAkC,CAAC;IACvE,MAAM,kBAAkB,GAAG,eAAe,CAAC;IAC3C,MAAM,kBAAkB,GAAG,eAAe,CAAC;IAC3C,MAAM,yBAAyB,GAAG,sBAAsB,CAAC;IAEzD,MAAM,MAAM,GAAG,uBAAuB;;ICTvC,SAAU,+BAA+B,CAC7C,kBAAsC,EAAA;IAEtC,IAAA,IAAI,kBAAkB,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;IACvD,QAAA,MAAM,IAAI,KAAK,CACb,GAAG,MAAM,CAAA,wJAAA,CAA0J,CACpK,CAAC;SACH;IACH,CAAC;IAEe,SAAA,4BAA4B,CAC1C,iBAAqC,EACrC,kBAAsC,EAAA;IAEtC,IAAA,IAAI,CAAC,iBAAiB,IAAI,CAAC,kBAAkB,EAAE;IAC7C,QAAA,MAAM,IAAI,KAAK,CACb,GAAG,MAAM,CAAA,mDAAA,CAAqD,CAC/D,CAAC;SACH;IAED,IAAA,IAAI,iBAAiB,IAAI,kBAAkB,EAAE;IAC3C,QAAA,MAAM,IAAI,KAAK,CACb,GAAG,MAAM,CAAA,sDAAA,CAAwD,CAClE,CAAC;SACH;IACH;;ICIM,SAAU,yBAAyB,CAAC,EACxC,WAAW,EACX,UAAU,EACV,iBAAiB,EACjB,kBAAkB,EAClB,UAAU,EACV,OAAO,GAAG,CAAC,EACX,cAAc,EACd,MAAM,GACqB,EAAA;IAC3B,IAAA,MAAM,2BAA2B,GAAG,8BAA8B,EAAE,CAAC;QAErE,MAAM,QAAQ,GAAG,4BAA4B,CAAC;IAC5C,QAAA,MAAM,EAAE,MAAM;YACd,WAAW;IACZ,KAAA,CAAC,CAAC;IAEH,IAAA,MAAM,8BAA8B,GAAG;IACrC,QAAA,MAAM,EAAE,MAAM;YACd,2BAA2B;YAC3B,MAAM;SACP,CAAC;QAEF,kBAAkB,CAAC,EAAE,GAAG,8BAA8B,EAAE,UAAU,EAAE,CAAC,CAAC;IACtE,IAAA,4BAA4B,CAAC,iBAAiB,EAAE,kBAAkB,CAAC,CAAC;QACpE,+BAA+B,CAAC,kBAAkB,CAAC,CAAC;QAEpD,MAAM,eAAe,GAAG,uBAAuB,CAC7C,QAAQ,EACR,UAAU,EACV,8BAA8B,CAC/B,CAAC;IAEF,IAAA,MAAM,MAAM,GAA8B;IACxC,QAAA,WAAW,EAAE,QAAQ;YACrB,UAAU;IACV,QAAA,IAAI,iBAAiB;kBACjB,EAAE,iBAAiB,EAAE;IACvB,cAAE;IACE,gBAAA,kBAAkB,EAAE,kBAAmB;iBACxC,CAAC;IACN,QAAA,OAAO,EAAE;IACP,YAAA,cAAc,EAAE,oBAAoB;IACpC,YAAA,MAAM,EAAE,oBAAoB;gBAC5B,CAAC,kBAAkB,GAAG,mBAAmB;gBACzC,CAAC,kBAAkB,GAAG,sBAAsB;IAC5C,YAAA,IAAI,UAAU,GAAG,EAAE,CAAC,yBAAyB,GAAG,UAAU,EAAE,GAAG,EAAE,CAAC;IAClE,YAAA,IAAI,iBAAiB;IACnB,kBAAE,EAAE,CAAC,0BAA0B,GAAG,iBAAiB,EAAE;sBACnD,EAAE,CAAC,2BAA2B,GAAG,kBAAmB,EAAE,CAAC;IAC5D,SAAA;YACD,MAAM,EAAE,eAAe,EAAE;YACzB,UAAU;SACX,CAAC;QAEF,MAAM,aAAa,GAAG,mBAAmB,CAAC;YACxC,OAAO,EAAE,MAAM,CAAC,OAAO;YACvB,GAAG,EAAE,MAAM,CAAC,MAAM;YAClB,OAAO;YACP,cAAc;YACd,MAAM;IACP,KAAA,CAAC,CAAC;IAEH,IAAA,MAAM,UAAU,GAAG,kBAAkB,CAAC,MAAM,CAAC,CAAC;QAC9C,MAAM,SAAS,GAAG,iBAAiB,CAAC,MAAM,EAAE,eAAe,CAAC,CAAC;QAE7D,MAAM,kBAAkB,GAAG,0BAA0B,CAAuB;YAC1E,UAAU;YACV,SAAS;IACV,KAAA,CAAC,CAAC;IAEH,IAAA,MAAM,MAAM,GAAwB;YAClC,MAAM;YACN,UAAU;YACV,SAAS;IACT,QAAA,KAAK,EAAE,CAAC,GAAG,KAAK,KAAI;gBAClB,OAAO,aAAa,CAAC,KAAK,CAAC,GAAG,kBAAkB,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;aAC7D;IACD,QAAA,OAAO,EAAE,CAAC,GAAG,KAAK,KAAI;gBACpB,OAAO,aAAa,CAAC,OAAO,CAAC,GAAG,kBAAkB,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;aAC/D;SACF,CAAC;IAEF,IAAA,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;IAED,SAAS,uBAAuB,CAC9B,QAAgB,EAChB,iBAAyB,EACzB,8BAGC,EAAA;QAED,OAAO,CAAC,UAAmB,KAAI;YAC7B,IAAI,UAAU,EAAE;IACd,YAAA,kBAAkB,CAAC;IACjB,gBAAA,GAAG,8BAA8B;oBACjC,UAAU;IACX,aAAA,CAAC,CAAC;aACJ;YAED,MAAM,aAAa,GAAG,CAAC,UAAU,IAAI,iBAAiB,EAAE,IAAI,EAAE,CAAC;IAE/D,QAAA,OAAO,CAAG,EAAA,QAAQ,CAAQ,KAAA,EAAA,aAAa,eAAe,CAAC;IACzD,KAAC,CAAC;IACJ,CAAC;IAED,SAAS,iBAAiB,CACxB,MAAiC,EACjC,eAA6C,EAAA;QAE7C,OAAO,CAAC,cAAuB,KAAI;IACjC,QAAA,OAAO,cAAc,GAAG,eAAe,CAAC,cAAc,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;IAC1E,KAAC,CAAC;IACJ;;;;;;;;"}